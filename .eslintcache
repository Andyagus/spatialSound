[{"/Users/AndyXcode/post_flatiron/week3/spaceSound/src/App.js":"1","/Users/AndyXcode/post_flatiron/week3/spaceSound/src/components/Graphics.js":"2","/Users/AndyXcode/post_flatiron/week3/spaceSound/src/components/MusicNote.js":"3","/Users/AndyXcode/post_flatiron/week3/spaceSound/src/index.js":"4","/Users/AndyXcode/post_flatiron/week3/spaceSound/src/components/PlayButton.js":"5","/Users/AndyXcode/post_flatiron/week3/spaceSound/src/components/Effects.js":"6","/Users/AndyXcode/post_flatiron/week3/spaceSound/src/reportWebVitals.js":"7","/Users/AndyXcode/post_flatiron/week3/spaceSound/src/components/SoundChooser.js":"8","/Users/AndyXcode/post_flatiron/week3/spaceSound/src/components/Sounds.js":"9"},{"size":2697,"mtime":1607610022155,"results":"10","hashOfConfig":"11"},{"size":446,"mtime":1606956744049,"results":"12","hashOfConfig":"11"},{"size":890,"mtime":1607540562710,"results":"13","hashOfConfig":"11"},{"size":500,"mtime":1606767796949,"results":"14","hashOfConfig":"11"},{"size":501,"mtime":1606938304389,"results":"15","hashOfConfig":"11"},{"size":643,"mtime":1606956730977,"results":"16","hashOfConfig":"11"},{"size":362,"mtime":1606767636864,"results":"17","hashOfConfig":"11"},{"size":467,"mtime":1607542361975,"results":"18","hashOfConfig":"11"},{"size":173,"mtime":1607542381463,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},"zwqm17",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/AndyXcode/post_flatiron/week3/spaceSound/src/App.js",["40","41","42","43","44","45"],"import './App.css';\nimport PlayButton from './components/PlayButton'\nimport Effects from './components/Effects'\nimport Graphics from './components/Graphics'\nimport SoundChooser from './components/SoundChooser'\nimport React from 'react'\n\nexport default class App extends React.Component{\n\n  state = {\n    playing: false,\n    song: process.env.PUBLIC_URL + 'thedeli.mp3',\n    audioElement: null,\n    audioContext: null,\n    gainNode: null,\n    gainValue: null,\n    panner: null,\n    pan: 0,\n    musicLogoVolume: 0\n  }\n\n  componentDidMount(){\n    const AudioContext = window.AudioContext || window.webkitAudioContext;\n    const audioContext = new AudioContext();\n    this.setState({audioContext: audioContext})\n    const audioElement = document.querySelector('audio');\n    this.setState({audioElement:audioElement})\n    const track = audioContext.createMediaElementSource(audioElement);\n    track.connect(audioContext.destination);\n    const gainNode = audioContext.createGain();\n    track.connect(gainNode).connect(audioContext.destination);\n    this.setState({gainNode: gainNode})\n    const pannerOptions = { pan: this.state.pan };\n    const panner = new StereoPannerNode(audioContext);\n    track.connect(gainNode).connect(panner).connect(audioContext.destination);\n    this.setState({panner: panner})\n\n  }\n\n  playClickHandler = (e) => {\n    console.log(e)\n    console.log(this.state.gain, \"gainnn\")\n    this.setState({playing: !this.state.playing})\n    this.state.audioContext.resume();\n    if(this.state.playing === false){\n      console.log(\"playing\")\n      this.state.audioElement.play()\n    }else if(this.state.playing === true){\n      console.log(\"notplaying\")\n      this.state.audioElement.pause()\n    }\n  }\n\n  effectHandler = (e) => {\n    this.setState({gainValue: e},\n    console.log(this.state.gainValue),\n    this.state.gainNode.gain.value = this.state.gainValue\n    )\n  }\n\n  panHandler = (e) => {\n    this.setState({pan: e})\n    console.log(this.state.pan)\n\n    this.state.panner.pan.value = this.state.pan\n  }\n\n\n//how to flip sounds?\n  graphicAudioPosition = (elementY, elementX) => {\n      console.log(elementY)\n      //setting gain\n      this.setState({gainValue: elementY/100})\n      this.state.gainNode.gain.value = this.state.gainValue \n      //setting pan\n      this.setState({pan: elementX/100})\n      this.state.panner.pan.value = this.state.pan\n  }\n\n  chosenSound = () => {\n    \n  }\n\n  render(){\n    return(\n      <div> \n      <h1> Tone Handler </h1>\n      <audio src={this.state.song}></audio>\n      <PlayButton playClickHandler={this.playClickHandler} />\n      <Graphics graphicAudioPosition={this.graphicAudioPosition}/>\n      <SoundChooser />\n      </div>\n    )\n  }\n  \n}\n\n","/Users/AndyXcode/post_flatiron/week3/spaceSound/src/components/Graphics.js",[],"/Users/AndyXcode/post_flatiron/week3/spaceSound/src/components/MusicNote.js",["46","47"],"import React from 'react'\nimport ReactDOM from 'react-dom'\n\nexport default class MusicNote extends React.Component{\n\n\tstate = {\n\t\tdraggedElementY: 300,\n\t\tdraggedElementX: 500\n\t\t}\n\trender(){\n\t\tconsole.log(this.props)\n\treturn(\n\t\t<div>\n\t\t\t<img style ={{\n\t\t\t\t  position: \"absolute\",\n\t\t\t\t  top: this.state.draggedElementY + 'px',\n\t\t\t\t  left: this.state.draggedElementX + 'px',\n\t\t\t\t\tborder: \"3px solid #73AD21\"\n\n\t\t\t}}src = {process.env.PUBLIC_URL + 'music-note.png'} draggable = \"true\" \n\t\t\t\tonDragOver = {(e) => {\n\n\t\t\t\t\te.stopPropagation();\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\n\t\t\t\t\tconst upYAxis = e.pageY \n\t\t\t\t\tconst rightXAxis = e.pageX\n\t\t\t\t\tthis.setState({draggedElementX:rightXAxis - 100})\n\t\t\t\t\tthis.setState({draggedElementY:upYAxis - 100},\n\t\t\t\t\tthis.props.graphicAudioPosition(this.state.draggedElementY, this.state.draggedElementX))\n\t\t\t\t\t// console.log(e.pageY)\n\t\t\t\t}}/>\n\t\t\t\t\n\t\t</div>\n\t\t)\n\t}\n\n}","/Users/AndyXcode/post_flatiron/week3/spaceSound/src/index.js",[],"/Users/AndyXcode/post_flatiron/week3/spaceSound/src/components/PlayButton.js",[],"/Users/AndyXcode/post_flatiron/week3/spaceSound/src/components/Effects.js",[],"/Users/AndyXcode/post_flatiron/week3/spaceSound/src/reportWebVitals.js",[],"/Users/AndyXcode/post_flatiron/week3/spaceSound/src/components/SoundChooser.js",[],"/Users/AndyXcode/post_flatiron/week3/spaceSound/src/components/Sounds.js",[],{"ruleId":"48","severity":1,"message":"49","line":3,"column":8,"nodeType":"50","messageId":"51","endLine":3,"endColumn":15},{"ruleId":"48","severity":1,"message":"52","line":33,"column":11,"nodeType":"50","messageId":"51","endLine":33,"endColumn":24},{"ruleId":"53","severity":1,"message":"54","line":57,"column":5,"nodeType":"55","endLine":57,"endColumn":29},{"ruleId":"53","severity":1,"message":"54","line":65,"column":5,"nodeType":"55","endLine":65,"endColumn":26},{"ruleId":"53","severity":1,"message":"54","line":74,"column":7,"nodeType":"55","endLine":74,"endColumn":31},{"ruleId":"53","severity":1,"message":"54","line":77,"column":7,"nodeType":"55","endLine":77,"endColumn":28},{"ruleId":"48","severity":1,"message":"56","line":2,"column":8,"nodeType":"50","messageId":"51","endLine":2,"endColumn":16},{"ruleId":"57","severity":1,"message":"58","line":14,"column":4,"nodeType":"59","endLine":32,"endColumn":9},"no-unused-vars","'Effects' is defined but never used.","Identifier","unusedVar","'pannerOptions' is assigned a value but never used.","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","'ReactDOM' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement"]