{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/AndyXcode/post_flatiron/week3/ar-recognition/src/App.js\";\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport React from 'react';\nexport default class App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      song: process.env.PUBLIC_URL + 'thedeli.mp3'\n    };\n  }\n\n  componentDidMount() {\n    const AudioContext = window.AudioContext || window.webkitAudioContext;\n    const audioContext = new AudioContext();\n    const audioElement = document.querySelector('audio');\n    const track = audioContext.createMediaElementSource(audioElement);\n    track.connect(audioContext.destination);\n    const playButton = document.querySelector('button');\n    playButton.addEventListener('click', function () {\n      if (audioContext.state === 'suspended') {\n        audioContext.resume();\n      }\n    });\n  }\n\n  render() {\n    console.log(this.state);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \" Hello World \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n        src: this.state.song\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        \"data-playing\": \"false\",\n        role: \"switch\",\n        \"aria-checked\": \"false\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \" Play/Pause \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/AndyXcode/post_flatiron/week3/ar-recognition/src/App.js"],"names":["React","App","Component","state","song","process","env","PUBLIC_URL","componentDidMount","AudioContext","window","webkitAudioContext","audioContext","audioElement","document","querySelector","track","createMediaElementSource","connect","destination","playButton","addEventListener","resume","render","console","log"],"mappings":";;;AACA,OAAO,WAAP;AACA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,eAAe,MAAMC,GAAN,SAAkBD,KAAK,CAACE,SAAxB,CAAiC;AAAA;AAAA;AAAA,SAE9CC,KAF8C,GAEtC;AACNC,MAAAA,IAAI,EAAEC,OAAO,CAACC,GAAR,CAAYC,UAAZ,GAAyB;AADzB,KAFsC;AAAA;;AAM9CC,EAAAA,iBAAiB,GAAE;AACjB,UAAMC,YAAY,GAAGC,MAAM,CAACD,YAAP,IAAuBC,MAAM,CAACC,kBAAnD;AACA,UAAMC,YAAY,GAAG,IAAIH,YAAJ,EAArB;AACA,UAAMI,YAAY,GAAGC,QAAQ,CAACC,aAAT,CAAuB,OAAvB,CAArB;AACA,UAAMC,KAAK,GAAGJ,YAAY,CAACK,wBAAb,CAAsCJ,YAAtC,CAAd;AACAG,IAAAA,KAAK,CAACE,OAAN,CAAcN,YAAY,CAACO,WAA3B;AACA,UAAMC,UAAU,GAAGN,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAnB;AAEAK,IAAAA,UAAU,CAACC,gBAAX,CAA4B,OAA5B,EAAqC,YAAU;AAC3C,UAAGT,YAAY,CAACT,KAAb,KAAuB,WAA1B,EAAsC;AACpCS,QAAAA,YAAY,CAACU,MAAb;AACD;AAEF,KALH;AAOD;;AAEDC,EAAAA,MAAM,GAAE;AACNC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKtB,KAAjB;AACA,wBACE;AAAA,8BACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,eAEA;AAAO,QAAA,GAAG,EAAE,KAAKA,KAAL,CAAWC;AAAvB;AAAA;AAAA;AAAA;AAAA,cAFA,eAGA;AAAQ,wBAAa,OAArB;AAA6B,QAAA,IAAI,EAAC,QAAlC;AAA2C,wBAAa,OAAxD;AAAA,+BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAHA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AASD;;AAlC6C","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport React from 'react'\n\nexport default class App extends React.Component{\n  \n  state = {\n    song: process.env.PUBLIC_URL + 'thedeli.mp3'\n  }\n\n  componentDidMount(){\n    const AudioContext = window.AudioContext || window.webkitAudioContext;\n    const audioContext = new AudioContext();\n    const audioElement = document.querySelector('audio')\n    const track = audioContext.createMediaElementSource(audioElement)\n    track.connect(audioContext.destination)\n    const playButton = document.querySelector('button')\n\n    playButton.addEventListener('click', function(){\n        if(audioContext.state === 'suspended'){\n          audioContext.resume()\n        }\n\n      })\n\n  }\n\n  render(){\n    console.log(this.state)\n    return(\n      <div> \n      <h1> Hello World </h1>\n      <audio src={this.state.song}></audio>\n      <button data-playing=\"false\" role=\"switch\" aria-checked=\"false\">\n        <span> Play/Pause </span>\n      </button>\n      </div>\n    )\n  }\n  \n}\n\n"]},"metadata":{},"sourceType":"module"}