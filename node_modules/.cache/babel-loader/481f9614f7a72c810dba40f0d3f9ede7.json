{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/AndyXcode/post_flatiron/week3/object-info-xr/src/App.js\";\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport React from 'react';\nexport default class App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      song: process.env.PUBLIC_URL + 'thedeli.mp3'\n    };\n  }\n\n  componentDidMount() {\n    const AudioContext = window.AudioContext || window.webkitAudioContext;\n    const audioContext = new AudioContext();\n    const audioElement = document.querySelector('audio');\n    const track = audioContext.createMediaElementSource(audioElement);\n    track.connect(audioContext.destination);\n    const playButton = document.querySelector('button');\n    playButton.addEventListener('click', function () {\n      if (audioContext.state === 'suspended') {\n        audioContext.resume();\n      }\n\n      if (this.dataset.playing === 'false') {\n        audioElement.play();\n        this.dataset.playing = 'true';\n      } else if (this.dataset.playing === 'true') {\n        audioElement.pause();\n        this.dataset.playing = 'false';\n      }\n    }, false);\n    const gainNode = audioContext.createGain();\n    track.connect(gainNode).connect(audioContext.destination);\n    const volumeControl = document.querySelector('#volume');\n    volumeControl.addEventListener('input', function () {\n      gainNode.gain.value = this.value;\n    }, false);\n    const pannerOptions = {\n      pan: 0\n    };\n  }\n\n  render() {\n    console.log(this.state);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \" Hello World \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n        src: this.state.song\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        \"data-playing\": \"false\",\n        role: \"switch\",\n        \"aria-checked\": \"false\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \" Play/Pause \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"range\",\n        id: \"volume\",\n        min: \"0\",\n        max: \"30\",\n        value: \"1\",\n        step: \"0.01\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/AndyXcode/post_flatiron/week3/object-info-xr/src/App.js"],"names":["React","App","Component","state","song","process","env","PUBLIC_URL","componentDidMount","AudioContext","window","webkitAudioContext","audioContext","audioElement","document","querySelector","track","createMediaElementSource","connect","destination","playButton","addEventListener","resume","dataset","playing","play","pause","gainNode","createGain","volumeControl","gain","value","pannerOptions","pan","render","console","log"],"mappings":";;;AACA,OAAO,WAAP;AACA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,eAAe,MAAMC,GAAN,SAAkBD,KAAK,CAACE,SAAxB,CAAiC;AAAA;AAAA;AAAA,SAE9CC,KAF8C,GAEtC;AACNC,MAAAA,IAAI,EAAEC,OAAO,CAACC,GAAR,CAAYC,UAAZ,GAAyB;AADzB,KAFsC;AAAA;;AAM9CC,EAAAA,iBAAiB,GAAE;AACjB,UAAMC,YAAY,GAAGC,MAAM,CAACD,YAAP,IAAuBC,MAAM,CAACC,kBAAnD;AACA,UAAMC,YAAY,GAAG,IAAIH,YAAJ,EAArB;AACA,UAAMI,YAAY,GAAGC,QAAQ,CAACC,aAAT,CAAuB,OAAvB,CAArB;AACA,UAAMC,KAAK,GAAGJ,YAAY,CAACK,wBAAb,CAAsCJ,YAAtC,CAAd;AACAG,IAAAA,KAAK,CAACE,OAAN,CAAcN,YAAY,CAACO,WAA3B;AACA,UAAMC,UAAU,GAAGN,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAnB;AAEAK,IAAAA,UAAU,CAACC,gBAAX,CAA4B,OAA5B,EAAqC,YAAU;AAC3C,UAAGT,YAAY,CAACT,KAAb,KAAuB,WAA1B,EAAsC;AACpCS,QAAAA,YAAY,CAACU,MAAb;AACD;;AAED,UAAG,KAAKC,OAAL,CAAaC,OAAb,KAAuB,OAA1B,EAAkC;AAChCX,QAAAA,YAAY,CAACY,IAAb;AACA,aAAKF,OAAL,CAAaC,OAAb,GAAqB,MAArB;AACD,OAHD,MAGM,IAAI,KAAKD,OAAL,CAAaC,OAAb,KAAyB,MAA7B,EAAoC;AACxCX,QAAAA,YAAY,CAACa,KAAb;AACA,aAAKH,OAAL,CAAaC,OAAb,GAAuB,OAAvB;AACD;AAEF,KAbH,EAaK,KAbL;AAeA,UAAMG,QAAQ,GAAGf,YAAY,CAACgB,UAAb,EAAjB;AACAZ,IAAAA,KAAK,CAACE,OAAN,CAAcS,QAAd,EAAwBT,OAAxB,CAAgCN,YAAY,CAACO,WAA7C;AACA,UAAMU,aAAa,GAAGf,QAAQ,CAACC,aAAT,CAAuB,SAAvB,CAAtB;AAEAc,IAAAA,aAAa,CAACR,gBAAd,CAA+B,OAA/B,EAAwC,YAAW;AACjDM,MAAAA,QAAQ,CAACG,IAAT,CAAcC,KAAd,GAAsB,KAAKA,KAA3B;AACD,KAFD,EAEG,KAFH;AAIA,UAAMC,aAAa,GAAG;AAAEC,MAAAA,GAAG,EAAE;AAAP,KAAtB;AAGD;;AAEDC,EAAAA,MAAM,GAAE;AACNC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKjC,KAAjB;AACA,wBACE;AAAA,8BACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,eAEA;AAAO,QAAA,GAAG,EAAE,KAAKA,KAAL,CAAWC;AAAvB;AAAA;AAAA;AAAA;AAAA,cAFA,eAGA;AAAQ,wBAAa,OAArB;AAA6B,QAAA,IAAI,EAAC,QAAlC;AAA2C,wBAAa,OAAxD;AAAA,+BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAHA,eAMA;AAAO,QAAA,IAAI,EAAC,OAAZ;AAAoB,QAAA,EAAE,EAAC,QAAvB;AAAgC,QAAA,GAAG,EAAC,GAApC;AAAwC,QAAA,GAAG,EAAC,IAA5C;AAAiD,QAAA,KAAK,EAAC,GAAvD;AAA2D,QAAA,IAAI,EAAC;AAAhE;AAAA;AAAA;AAAA;AAAA,cANA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAWD;;AAvD6C","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport React from 'react'\n\nexport default class App extends React.Component{\n  \n  state = {\n    song: process.env.PUBLIC_URL + 'thedeli.mp3'\n  }\n\n  componentDidMount(){\n    const AudioContext = window.AudioContext || window.webkitAudioContext;\n    const audioContext = new AudioContext();\n    const audioElement = document.querySelector('audio')\n    const track = audioContext.createMediaElementSource(audioElement)\n    track.connect(audioContext.destination)\n    const playButton = document.querySelector('button')\n\n    playButton.addEventListener('click', function(){\n        if(audioContext.state === 'suspended'){\n          audioContext.resume()\n        }\n\n        if(this.dataset.playing==='false'){\n          audioElement.play();\n          this.dataset.playing='true'\n        }else if (this.dataset.playing === 'true'){\n          audioElement.pause()\n          this.dataset.playing = 'false'\n        }\n\n      }, false)\n\n    const gainNode = audioContext.createGain();\n    track.connect(gainNode).connect(audioContext.destination)\n    const volumeControl = document.querySelector('#volume');\n\n    volumeControl.addEventListener('input', function() {\n      gainNode.gain.value = this.value;\n    }, false);\n\n    const pannerOptions = { pan: 0 };\n\n\n  }\n\n  render(){\n    console.log(this.state)\n    return(\n      <div> \n      <h1> Hello World </h1>\n      <audio src={this.state.song}></audio>\n      <button data-playing=\"false\" role=\"switch\" aria-checked=\"false\">\n        <span> Play/Pause </span>\n      </button>\n      <input type=\"range\" id=\"volume\" min=\"0\" max=\"30\" value=\"1\" step=\"0.01\"/>\n\n      </div>\n    )\n  }\n  \n}\n\n"]},"metadata":{},"sourceType":"module"}