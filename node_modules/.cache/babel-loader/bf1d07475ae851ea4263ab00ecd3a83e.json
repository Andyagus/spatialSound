{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/AndyXcode/post_flatiron/week3/object-info-xr/src/App.js\";\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport PlayButton from './components/PlayButton';\nimport React from 'react';\nexport default class App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      song: process.env.PUBLIC_URL + 'thedeli.mp3',\n      playing: false\n    };\n\n    this.playClickHandler = e => {\n      this.setState({\n        playing: e\n      }, console.log(this.state.playing));\n\n      if (this.state.playing === 'true') {\n        cosole.log(\"whoopppie\");\n      }\n    };\n  }\n\n  componentDidMount() {\n    const AudioContext = window.AudioContext || window.webkitAudioContext;\n    const audioContext = new AudioContext();\n    const audioElement = document.querySelector('audio');\n    const track = audioContext.createMediaElementSource(audioElement);\n    track.connect(audioContext.destination);\n    const playButton = document.querySelector('button');\n    playButton.addEventListener('click', function () {\n      if (audioContext.state === 'suspended') {\n        audioContext.resume();\n      }\n\n      if (this.dataset.playing === 'false') {\n        audioElement.play();\n        this.dataset.playing = 'true';\n      } else if (this.dataset.playing === 'true') {\n        audioElement.pause();\n        this.dataset.playing = 'false';\n      }\n    }, false);\n    const gainNode = audioContext.createGain();\n    track.connect(gainNode).connect(audioContext.destination);\n    const volumeControl = document.querySelector('#volume');\n    volumeControl.addEventListener('input', function () {\n      gainNode.gain.value = this.value;\n    }, false);\n    const pannerOptions = {\n      pan: 0\n    };\n    const panner = new StereoPannerNode(audioContext, pannerOptions);\n    const pannerControl = document.querySelector('#panner');\n    pannerControl.addEventListener('input', function () {\n      panner.pan.value = this.value;\n    }, false);\n    track.connect(gainNode).connect(panner).connect(audioContext.destination);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \" Tone Handler \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n        src: this.state.song\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(PlayButton, {\n        playClickHandler: this.playClickHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 7\n      }, this), \"// \", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"range\",\n        id: \"volume\",\n        min: \"-1\",\n        max: \"1\",\n        value: \"0\",\n        step: \"0.01\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 10\n      }, this), \"// \", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"range\",\n        id: \"panner\",\n        min: \"-1\",\n        max: \"1\",\n        value: \"0\",\n        step: \"0.01\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 10\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/AndyXcode/post_flatiron/week3/object-info-xr/src/App.js"],"names":["PlayButton","React","App","Component","state","song","process","env","PUBLIC_URL","playing","playClickHandler","e","setState","console","log","cosole","componentDidMount","AudioContext","window","webkitAudioContext","audioContext","audioElement","document","querySelector","track","createMediaElementSource","connect","destination","playButton","addEventListener","resume","dataset","play","pause","gainNode","createGain","volumeControl","gain","value","pannerOptions","pan","panner","StereoPannerNode","pannerControl","render"],"mappings":"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","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport PlayButton from './components/PlayButton'\nimport React from 'react'\n\nexport default class App extends React.Component{\n  \n  state = {\n    song: process.env.PUBLIC_URL + 'thedeli.mp3',\n    playing: false\n  }\n\n  componentDidMount(){\n    const AudioContext = window.AudioContext || window.webkitAudioContext;\n    const audioContext = new AudioContext();\n    const audioElement = document.querySelector('audio')\n    const track = audioContext.createMediaElementSource(audioElement)\n    track.connect(audioContext.destination)\n    const playButton = document.querySelector('button')\n\n    playButton.addEventListener('click', function(){\n        if(audioContext.state === 'suspended'){\n          audioContext.resume()\n        }\n\n        if(this.dataset.playing==='false'){\n          audioElement.play();\n          this.dataset.playing='true'\n        }else if (this.dataset.playing === 'true'){\n          audioElement.pause()\n          this.dataset.playing = 'false'\n        }\n\n      }, false)\n\n    const gainNode = audioContext.createGain();\n    track.connect(gainNode).connect(audioContext.destination)\n    const volumeControl = document.querySelector('#volume');\n\n    volumeControl.addEventListener('input', function() {\n      gainNode.gain.value = this.value;\n    }, false);\n\n    const pannerOptions = { pan: 0 };\n    const panner = new StereoPannerNode(audioContext, pannerOptions);\n\n    const pannerControl = document.querySelector('#panner');\n\n    pannerControl.addEventListener('input', function() {\n        panner.pan.value = this.value;\n    }, false);\n\n    track.connect(gainNode).connect(panner).connect(audioContext.destination);\n\n  }\n\n  playClickHandler = (e) => {\n    this.setState({playing: e},\n    console.log(this.state.playing))\n\n    if(this.state.playing === 'true'){\n      cosole.log(\"whoopppie\")\n    }\n  }\n\n  render(){\n    return(\n      <div> \n      <h1> Tone Handler </h1>\n      <audio src={this.state.song}></audio>\n      <PlayButton playClickHandler={this.playClickHandler} />\n      // <input type=\"range\" id=\"volume\" min=\"-1\" max=\"1\" value=\"0\" step=\"0.01\"/>\n      // <input type=\"range\" id=\"panner\" min=\"-1\" max=\"1\" value=\"0\" step=\"0.01\"/>\n\n      </div>\n    )\n  }\n  \n}\n\n"]},"metadata":{},"sourceType":"module"}