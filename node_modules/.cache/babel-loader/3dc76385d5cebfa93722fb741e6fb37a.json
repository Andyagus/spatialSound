{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/AndyXcode/post_flatiron/week3/object-info-xr/src/App.js\";\nimport './App.css';\nimport PlayButton from './components/PlayButton'; // import AudioElement from './components/AudioElement'\n\nimport React from 'react';\nexport default class App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      playing: false,\n      song: process.env.PUBLIC_URL + 'thedeli.mp3',\n      audioElement: null,\n      audioContext: null\n    };\n\n    this.playClickHandler = e => {\n      console.log(e);\n      this.state.audioContext.resume();\n\n      if (this.state.playing === false) {\n        console.log(\"playing\");\n        this.state.audioElement.play();\n      } else if (this.state.playing === !false) {\n        this.state.audioElement.stop();\n      }\n    };\n\n    this.checkToPlaySong = () => {\n      console.log(this.state.audioElement);\n\n      if (!this.state.playing) {// this.state.audioElement.play()  \n      } else {// this.state.audioElement.pause()\n        }\n    };\n\n    this.accessAudioElement = e => {};\n  }\n\n  componentDidMount() {\n    const AudioContext = window.AudioContext || window.webkitAudioContext;\n    const audioContext = new AudioContext();\n    this.setState({\n      audioContext: audioContext\n    });\n    const audioElement = document.querySelector('audio');\n    this.setState({\n      audioElement: audioElement\n    });\n    const track = audioContext.createMediaElementSource(audioElement);\n    track.connect(audioContext.destination);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \" Tone Handler \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n        src: this.state.song\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(PlayButton, {\n        playClickHandler: this.playClickHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/AndyXcode/post_flatiron/week3/object-info-xr/src/App.js"],"names":["PlayButton","React","App","Component","state","playing","song","process","env","PUBLIC_URL","audioElement","audioContext","playClickHandler","e","console","log","resume","play","stop","checkToPlaySong","accessAudioElement","componentDidMount","AudioContext","window","webkitAudioContext","setState","document","querySelector","track","createMediaElementSource","connect","destination","render"],"mappings":";;AAAA,OAAO,WAAP;AACA,OAAOA,UAAP,MAAuB,yBAAvB,C,CACA;;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,eAAe,MAAMC,GAAN,SAAkBD,KAAK,CAACE,SAAxB,CAAiC;AAAA;AAAA;AAAA,SAE9CC,KAF8C,GAEtC;AACNC,MAAAA,OAAO,EAAE,KADH;AAENC,MAAAA,IAAI,EAAEC,OAAO,CAACC,GAAR,CAAYC,UAAZ,GAAyB,aAFzB;AAGNC,MAAAA,YAAY,EAAE,IAHR;AAINC,MAAAA,YAAY,EAAE;AAJR,KAFsC;;AAAA,SAmB9CC,gBAnB8C,GAmB1BC,CAAD,IAAO;AACxBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACA,WAAKT,KAAL,CAAWO,YAAX,CAAwBK,MAAxB;;AACA,UAAG,KAAKZ,KAAL,CAAWC,OAAX,KAAuB,KAA1B,EAAgC;AAC9BS,QAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACA,aAAKX,KAAL,CAAWM,YAAX,CAAwBO,IAAxB;AACD,OAHD,MAGM,IAAG,KAAKb,KAAL,CAAWC,OAAX,KAAuB,CAAC,KAA3B,EAAiC;AACrC,aAAKD,KAAL,CAAWM,YAAX,CAAwBQ,IAAxB;AACD;AACF,KA5B6C;;AAAA,SA8B9CC,eA9B8C,GA8B5B,MAAM;AAEtBL,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKX,KAAL,CAAWM,YAAvB;;AAEA,UAAG,CAAC,KAAKN,KAAL,CAAWC,OAAf,EAAuB,CACrB;AACD,OAFD,MAEK,CACH;AACD;AAEF,KAxC6C;;AAAA,SA0C9Ce,kBA1C8C,GA0CxBP,CAAD,IAAO,CAC3B,CA3C6C;AAAA;;AAS9CQ,EAAAA,iBAAiB,GAAE;AACjB,UAAMC,YAAY,GAAGC,MAAM,CAACD,YAAP,IAAuBC,MAAM,CAACC,kBAAnD;AACA,UAAMb,YAAY,GAAG,IAAIW,YAAJ,EAArB;AACA,SAAKG,QAAL,CAAc;AAACd,MAAAA,YAAY,EAAEA;AAAf,KAAd;AACA,UAAMD,YAAY,GAAGgB,QAAQ,CAACC,aAAT,CAAuB,OAAvB,CAArB;AACA,SAAKF,QAAL,CAAc;AAACf,MAAAA,YAAY,EAACA;AAAd,KAAd;AACA,UAAMkB,KAAK,GAAGjB,YAAY,CAACkB,wBAAb,CAAsCnB,YAAtC,CAAd;AACAkB,IAAAA,KAAK,CAACE,OAAN,CAAcnB,YAAY,CAACoB,WAA3B;AACD;;AA4BDC,EAAAA,MAAM,GAAE;AACN,wBACE;AAAA,8BACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,eAEA;AAAO,QAAA,GAAG,EAAE,KAAK5B,KAAL,CAAWE;AAAvB;AAAA;AAAA;AAAA;AAAA,cAFA,eAGA,QAAC,UAAD;AAAY,QAAA,gBAAgB,EAAE,KAAKM;AAAnC;AAAA;AAAA;AAAA;AAAA,cAHA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAQD;;AAtD6C","sourcesContent":["import './App.css';\nimport PlayButton from './components/PlayButton'\n// import AudioElement from './components/AudioElement'\nimport React from 'react'\n\nexport default class App extends React.Component{\n\n  state = {\n    playing: false,\n    song: process.env.PUBLIC_URL + 'thedeli.mp3',\n    audioElement: null,\n    audioContext: null\n  }\n\n  componentDidMount(){\n    const AudioContext = window.AudioContext || window.webkitAudioContext;\n    const audioContext = new AudioContext();\n    this.setState({audioContext: audioContext})\n    const audioElement = document.querySelector('audio');\n    this.setState({audioElement:audioElement})\n    const track = audioContext.createMediaElementSource(audioElement);\n    track.connect(audioContext.destination);\n  }\n\n  playClickHandler = (e) => {\n    console.log(e)\n    this.state.audioContext.resume();\n    if(this.state.playing === false){\n      console.log(\"playing\")\n      this.state.audioElement.play()\n    }else if(this.state.playing === !false){\n      this.state.audioElement.stop()\n    }\n  }\n\n  checkToPlaySong = () => {\n\n    console.log(this.state.audioElement)\n\n    if(!this.state.playing){\n      // this.state.audioElement.play()  \n    }else{\n      // this.state.audioElement.pause()\n    }\n    \n  }\n\n  accessAudioElement = (e) => {\n  }\n\n  render(){\n    return(\n      <div> \n      <h1> Tone Handler </h1>\n      <audio src={this.state.song}></audio>\n      <PlayButton playClickHandler={this.playClickHandler} />\n\n      </div>\n    )\n  }\n  \n}\n\n"]},"metadata":{},"sourceType":"module"}